cmake_minimum_required(VERSION 3.16)

set(LOGGER_SOURCES Logger.cpp
    Logger.hpp)

add_library(logger ${LOGGER_SOURCES})
target_link_libraries(logger PUBLIC spdlog::spdlog)

if(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Trace)
    set(SLIME_SIMULATOR_LOG_LEVEL TRACE)
    message(STATUS "Using log level Trace")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Debug)
    set(SLIME_SIMULATOR_LOG_LEVEL DEBUG)
    message(STATUS "Using log level Debug")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Info)
    set(SLIME_SIMULATOR_LOG_LEVEL INFO)
    message(STATUS "Using log level Info")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Warn)
    set(SLIME_SIMULATOR_LOG_LEVEL WARN)
    message(STATUS "Using log level Warn")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Error)
    set(SLIME_SIMULATOR_LOG_LEVEL ERROR)
    message(STATUS "Using log level Error")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Critical)
    set(SLIME_SIMULATOR_LOG_LEVEL CRITICAL)
    message(STATUS "Using log level Critical")
elseif(${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Off)
    set(SLIME_SIMULATOR_LOG_LEVEL OFF)
    message(STATUS "Using log level Off")
else()
    if((NOT ${SLIME_SIMULATOR_LOG_LEVEL} STREQUAL Default) AND(NOT SLIME_SIMULATOR_LOG_LEVEL STREQUAL ""))
        message(WARNING "Log level '${SLIME_SIMULATOR_LOG_LEVEL}' unknown, use -DSLIME_SIMULATOR_LOG_LEVEL=[Trace, Debug, Info, Warn, Error, Critical, Off, Default]")
    endif()

    set(SLIME_SIMULATOR_LOG_LEVEL $<IF:$<CONFIG:Debug>,DEBUG,INFO>)
    message(STATUS "Setting SLIME_SIMULATOR_LOG_LEVEL to according to build type")
endif()

target_compile_definitions(logger INTERFACE SPDLOG_ACTIVE_LEVEL=SPDSLIME_SIMULATOR_LOG_LEVEL_${SLIME_SIMULATOR_LOG_LEVEL})
